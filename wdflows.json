[
    {
        "id": "dbf55884c90c986f",
        "type": "inject",
        "z": "7b507918dcf05dd0",
        "name": "Ввод данных",
        "props": [
            {
                "p": "startDate",
                "v": "2025-01-28",
                "vt": "str"
            },
            {
                "p": "workingDays",
                "v": "10",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1100,
        "wires": [
            [
                "4c8aef76341f7792"
            ]
        ]
    },
    {
        "id": "4c8aef76341f7792",
        "type": "function",
        "z": "7b507918dcf05dd0",
        "name": "Расчет конечной даты в рабочих днях 2025г",
        "func": "// https://github.com/d10xa/holidays-calendar/blob/master/json/consultant2025.json\n\nconst holidays = [\n    \"2025-01-01\", \"2025-01-02\", \"2025-01-03\", \"2025-01-04\", \"2025-01-05\", \"2025-01-06\", \"2025-01-07\", \"2025-01-08\",\n    \"2025-01-11\", \"2025-01-12\", \"2025-01-18\", \"2025-01-19\", \"2025-01-25\", \"2025-01-26\", \"2025-02-01\", \"2025-02-02\",\n    \"2025-02-08\", \"2025-02-09\", \"2025-02-15\", \"2025-02-16\", \"2025-02-22\", \"2025-02-23\", \"2025-03-01\", \"2025-03-02\",\n    \"2025-03-08\", \"2025-03-09\", \"2025-03-15\", \"2025-03-16\", \"2025-03-22\", \"2025-03-23\", \"2025-03-29\", \"2025-03-30\",\n    \"2025-04-05\", \"2025-04-06\", \"2025-04-12\", \"2025-04-13\", \"2025-04-19\", \"2025-04-20\", \"2025-04-26\", \"2025-04-27\",\n    \"2025-05-01\", \"2025-05-02\", \"2025-05-03\", \"2025-05-04\", \"2025-05-08\", \"2025-05-09\", \"2025-05-10\", \"2025-05-11\",\n    \"2025-05-17\", \"2025-05-18\", \"2025-05-24\", \"2025-05-25\", \"2025-05-31\", \"2025-06-01\", \"2025-06-07\", \"2025-06-08\",\n    \"2025-06-12\", \"2025-06-13\", \"2025-06-14\", \"2025-06-15\", \"2025-06-21\", \"2025-06-22\", \"2025-06-28\", \"2025-06-29\",\n    \"2025-07-05\", \"2025-07-06\", \"2025-07-12\", \"2025-07-13\", \"2025-07-19\", \"2025-07-20\", \"2025-07-26\", \"2025-07-27\",\n    \"2025-08-02\", \"2025-08-03\", \"2025-08-09\", \"2025-08-10\", \"2025-08-16\", \"2025-08-17\", \"2025-08-23\", \"2025-08-24\",\n    \"2025-08-30\", \"2025-08-31\", \"2025-09-06\", \"2025-09-07\", \"2025-09-13\", \"2025-09-14\", \"2025-09-20\", \"2025-09-21\",\n    \"2025-09-27\", \"2025-09-28\", \"2025-10-04\", \"2025-10-05\", \"2025-10-11\", \"2025-10-12\", \"2025-10-18\", \"2025-10-19\",\n    \"2025-10-25\", \"2025-10-26\", \"2025-11-02\", \"2025-11-03\", \"2025-11-04\", \"2025-11-08\", \"2025-11-09\", \"2025-11-15\",\n    \"2025-11-16\", \"2025-11-22\", \"2025-11-23\", \"2025-11-29\", \"2025-11-30\", \"2025-12-06\", \"2025-12-07\", \"2025-12-13\",\n    \"2025-12-14\", \"2025-12-20\", \"2025-12-21\", \"2025-12-27\", \"2025-12-28\", \"2025-12-31\"\n];\n\nconst preholidays = [\n    \"2025-03-07\", \"2025-04-30\", \"2025-06-11\", \"2025-11-01\"\n];\n\nlet startDate = new Date(msg.startDate);\nlet workingDays = msg.workingDays;\n\nwhile (workingDays > 0) {\n    startDate.setDate(startDate.getDate() + 1);\n    const dayOfWeek = startDate.getDay();\n    const dateString = startDate.toISOString().split('T')[0];\n    \n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !holidays.includes(dateString)) {\n        workingDays--;\n    }\n}\n\nmsg.payload = startDate.toISOString().split('T')[0];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1100,
        "wires": [
            [
                "8ebdf66f70787e55"
            ]
        ]
    },
    {
        "id": "8ebdf66f70787e55",
        "type": "debug",
        "z": "7b507918dcf05dd0",
        "name": "Вывод конечной даты",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1100,
        "wires": []
    }
]